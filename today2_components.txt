React Components
=================
Components are like functions that return HTML elements.
Components are independent and reusable bits of code.

Components come in two types, Class components and Function components
=======================================================================
Create Your First class Component
When creating a React component, the component's name MUST start with an upper case letter.

1)Class Component
===============
A class component must include the extends React.Component statement. 
This statement creates an inheritance to React.

Example
Create a Class component called Car

class Car extends React.Component {
  render() {
    return <h2>Hi, I am a Car!</h2>;
  }
}

2) Function Component
======================
A Function component also returns HTML, and behaves much the same way as a Class component, 
but Function components can be written using much less code, are easier to understand

Example
Create a Function component called Car

function Car() {
  return <h2>Hi, I am a Car!</h2>;
}

======================================Rendering component=================================================

Now your React application has a component called Car, which returns an <h2> element.

To use this component in your application, use similar syntax as normal HTML: <Car />

Example
Display the Car component in the "root" element:


import React from 'react';
import ReactDOM from 'react-dom';

function Car() {
  return <h2>Hi, I am a Car!</h2>;
}

ReactDOM.render(<Car />, document.getElementById('root'));

=====================================props- basic============================================================
Components can be passed as props, which stands for properties.

Props are like function arguments, and you send them into the component as attributes.

import React from 'react';
import ReactDOM from 'react-dom';

function Car(props) {
  return <h2>I am a {props.color} Car!</h2>;
}

ReactDOM.render(<Car color="red"/>, document.getElementById('root'));
==================================Components in Components==================================================
We can refer to components inside other components:

import React from 'react';
import ReactDOM from 'react-dom';

function Car() {
  return <h2>I am a Car!</h2>;
}

function Garage() {
  return (
    <>
	    <h1>Who lives in my Garage?</h1>
	    <Car />
    </>
  );
}

ReactDOM.render(<Garage />, document.getElementById('root'));
====================================Components in Files===============================================
React is all about re-using code, and it is recommended to split your components into separate files.

To do that, create a new file with a .js file extension and put the code inside it:

Note that the filename must start with an uppercase character.

Example
This is the new file, we named it "Car.js":

function Car() {
  return <h2>Hi, I am a Car!</h2>;
}

export default Car;
-------------------------------------------
import React from 'react';
import ReactDOM from 'react-dom';
import Car from './Car.js';

ReactDOM.render(<Car />, document.getElementById('root'));

========================================